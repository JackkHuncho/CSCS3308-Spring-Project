<style>
  #openPopup {
    display: block;
    height: 40px;
    width: 200px;
    border-radius: 10px;
    margin: 0 auto 30px auto;
  }

  #popup {
    background: white;
    visibility: hidden;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 20px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    border-radius: 8px;
    text-align: center;
    width: 90%;
    max-width: 320px;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  #popup-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    visibility: hidden;
  }

  #playlistForm input,
  #playlistForm button {
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
    width: 100%;
  }

  .playlist-card {
    background: #224489;
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    padding: 20px;
    margin: 0 auto 50px auto;
    width: 90%;
    max-width: 800px;
    box-shadow: -10px 10px 5px rgb(0 0 0 / 20%);
    transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
  }

  .playlist-card h4,
  .playlist-card p,
  .playlist-card a,
  .playlist-card h5 {
    color: white;
  }

  .playlist-card h5 {
    font-weight: bold;
  }

  .fade-in {
    opacity: 0;
    transform: translateY(20px);
  }

  .fade-in.show {
    opacity: 1;
    transform: translateY(0);
  }

  .convert-button {
    background-color: #f0f0f0;
    border-radius: 10px;
    border: 1px solid #333;
    padding: 8px;
    margin-top: 10px;
    cursor: pointer;
    width: 100%;
    transition: background-color 0.2s;
  }

  .convert-button:hover {
    background-color: #ddd;
  }

  .playlist-card iframe {
    width: 100% !important;
    max-width: 100% !important;
    display: block;
    margin: 0 auto;
    padding: 0;
    border: none;
    border-radius: 12px;
  }

  .spotify-wrapper {
    width: 100%;
    display: block;
    margin: 0 auto;
  }

  .spotify-wrapper iframe {
    width: 100% !important;
    max-width: 100% !important;
    display: block;
    border: none;
    border-radius: 12px;
  }

  @media (max-width: 600px) {
    .playlist-card {
      padding: 15px;
    }

    .playlist-card iframe {
      height: 450px;
    }

    .spotify-post {
      max-width: 360px;
    }

    .playlist-card > div {
      flex-direction: row !important;
      justify-content: space-between !important;
      align-items: center !important;
      gap: 10px;
    }

    .playlist-card img {
      width: 40px !important;
      height: 40px !important;
    }

    #popup {
      padding: 15px;
    }

    #openPopup {
      width: 90%;
    }
  }
</style>

{{#if message}}
  <div class="alert alert-danger fade-in">{{message}}</div>
{{/if}}

<br>

{{#if user}}
  <button id="openPopup" onclick="openPopup()">Post Playlist</button>

  <div id="popup-overlay" onclick="closePopup()"></div>

  <div id="popup">
    <button onclick="closePopup()">Close</button>
    <form id="playlistForm">
      <input type="text" name="title" placeholder="Playlist title" required>
      <input type="text" name="caption" placeholder="Caption" required>
      <input type="url" name="applelink" id="applelink" placeholder="Spotify or Apple Music Link">
      <button type="submit">Post Playlist</button>
    </form>
  </div>

  <div id="postsContainer">
    {{#each posts}}
      <div class="playlist-card {{#if spotlink}}spotify-post{{/if}}">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
          <div>
            <h5>{{title}}</h5>
            <p>{{caption}}</p>
          </div>
          <a href="/user/{{username}}" style="display: flex; align-items: center; gap: 10px; text-decoration: none;">
            <span style="color: white; font-weight: bold;">{{username}}</span>
            <img src="{{pfp}}" alt="{{username}}'s profile" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover;">
          </a>
        </div>

        {{#if applelink}}
          <iframe src="{{convertToEmbed applelink}}" width="100%" height="450" frameborder="0" allowfullscreen
                  allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"
                  loading="lazy"></iframe>
          <button class="convert-button" data-link="{{applelink}}">Cross Tune</button>
        {{/if}}

        {{#if spotlink}}
          <iframe src="{{convertToEmbed spotlink}}" width="100%" height="450" frameborder="0" allowfullscreen
                  allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"
                  loading="lazy"></iframe>
          <button class="convert-button" data-link="{{spotlink}}">Cross Tune</button>
        {{/if}}
      </div>
    {{/each}}
  </div>

  <script>
    function openPopup() {
      document.getElementById("popup").style.visibility = "visible";
      document.getElementById("popup-overlay").style.visibility = "visible";
    }

    function closePopup() {
      document.getElementById("popup").style.visibility = "hidden";
      document.getElementById("popup-overlay").style.visibility = "hidden";
    }

    function isValidMusicLink(url) {
      const trimmed = url.trim();
      return trimmed.includes("open.spotify.com/playlist/") || trimmed.includes("music.apple.com/");
    }

    document.getElementById("playlistForm").addEventListener("submit", async function (e) {
      e.preventDefault();

      const title = this.title.value;
      const caption = this.caption.value;
      const applelink = this.applelink.value.trim();
      const spotLink = this.spotLink?.value?.trim();
      const musicLink = applelink || spotLink;

      if (!isValidMusicLink(musicLink)) {
        alert("Please enter a valid Apple Music or Spotify playlist link.");
        return;
      }

      const response = await fetch("/posts", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ title, caption, applelink, spotLink })
      });

      const data = await response.json();

      if (data.success) {
        window.location.reload(); // simple reload for update
      } else {
        alert(data.message || "Failed to post playlist.");
      }
    });
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const convertButtons = document.querySelectorAll('.convert-button');

      convertButtons.forEach(button => {
        button.addEventListener('click', async (e) => {
          const linkToConvert = e.target.dataset.link;

          const isSpotifyConnected = {{#if isSpotifyConnected}}true{{else}}false{{/if}};
          const isAppleConnected = {{#if isAppleConnected}}true{{else}}false{{/if}};


          if (!isSpotifyConnected && !isAppleConnected) {
            alert("Please connect to Apple Music or Spotify first.");
            window.location.href = "/settings";
            return;
          }

          try {
            const res = await fetch('/convert-playlist', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ link: linkToConvert })
            });

            const data = await res.json();
            if (res.ok) {
              alert(`${data.message}\nPlaylist ID: ${data.newPlaylistId}`);
            } else {
              alert(`Error: ${data.error || "Conversion failed"}`);
            }
          } catch (err) {
            console.error('Conversion failed:', err);
            alert("Server error. Try again later.");
          }
        });
      });
    });
  </script>

{{else}}
  <p class="text-white">You are not logged in.</p>
{{/if}}


{{! This is a helper function to make the convert button work - kendrix}}
<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Grab all convert buttons
    const convertButtons = document.querySelectorAll('.convert-button');

    convertButtons.forEach((button) => {
      button.addEventListener('click', async (event) => {
        // Retrieve the link from the button's data-link attribute
        const linkToConvert = event.target.dataset.link;

        // Send it to your /convert-playlist route
        try {
          const response = await fetch('/convert-playlist', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ link: linkToConvert }),
          });

          const data = await response.json();

          if (response.ok) {
            alert(`Success! ${data.message}\nNew playlist ID: ${data.newPlaylistId}`);
          } else {
            alert(`Error: ${data.error || 'Conversion failed'}`);
          }
        } catch (err) {
          console.error('Conversion request failed:', err);
          alert('Error connecting to server. Please try again.');
        }
      });
    });
  });
</script>
